platform :ios, '11.0'

# used for automatic bumping
flipperkit_version = '0.100.0'

require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

def find_and_replace(dir, findstr, replacestr)
  Dir[dir].each do |name|
      text = File.read(name)
      replace = text.gsub(findstr,replacestr)

      if text != replace
          puts "Fix: " + name
          system("chmod +w " + name)
          File.open(name, "w") { |file| file.puts replace }
          STDOUT.flush
      end
  end
  Dir[dir + '*/'].each(&method(:find_and_replace))
end

abstract_target 'Status' do
  # Pods for StatusQuo
  config = use_native_modules!

  use_react_native!(:path => config["reactNativePath"],
                    :hermes_enabled => true)

  pod 'react-native-image-resizer', :path => '../node_modules/react-native-image-resizer'
  pod 'react-native-config', :path => '../node_modules/react-native-config'

  pod 'SQLCipher', '~>3.0'
  pod 'SSZipArchive'

  permissions_path = '../node_modules/react-native-permissions/ios'
  pod 'Permission-Microphone', :path => "#{permissions_path}/Microphone.podspec"
  pod 'Permission-Camera', :path => "#{permissions_path}/Camera.podspec"

  pod "react-native-status-keycard", path: "../node_modules/react-native-status-keycard"
  pod "react-native-status", path: "../modules/react-native-status"
  pod "Keycard", git: "https://github.com/status-im/Keycard.swift.git"
  pod 'secp256k1', git: "https://github.com/status-im/secp256k1.swift.git", submodules: true

  target 'StatusIm' do
    target 'StatusImTests' do
      inherit! :complete
      # Pods for testing
    end
  end

  target 'StatusImPR' do
  end

  use_flipper!({ 'Flipper' => flipperkit_version, 'Flipper-Folly' => '2.6.7' })

  # some of libs wouldn't be build for x86_64 otherwise and that is
  # necessary for ios simulators
  post_install do |installer_representation|
    flipper_post_install(installer_representation)

    find_and_replace("Pods/RCT-Folly/folly/synchronization/DistributedMutex-inl.h",
          "  atomic_notify_one(state);", "  folly::atomic_notify_one(state);")

    installer_representation.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
      end
    end
  end

  use_native_modules!
end

